import remiseras.*
import clientes.*

describe "Testing de roxana"{
	
	test "Viaje con cliente Ludmila" {
		
		
		assert.equals(180, roxana.precioDelViaje(ludmila,10))
		assert.equals(36, roxana.precioDelViaje(ludmila,2))
	}
	
	test "Viaje con Ana Maria"{
		
		assert.equals(300, roxana.precioDelViaje(anamaria,10))
		assert.equals(60, roxana.precioDelViaje(anamaria,2))
	}
	
	test "Viaje con Teresa"{
		
		assert.equals(220, roxana.precioDelViaje(teresa,10))
		assert.equals(44, roxana.precioDelViaje(teresa,2))
	}
}

describe "Testing de gabriela"{
	
	test "Viaje con cliente Ludmila" {
		
		
		assert.equals(216, gabriela.precioDelViaje(ludmila,10))
		assert.equals(43.2, gabriela.precioDelViaje(ludmila,2))
	}
	
	test "Viaje con Ana Maria"{
		
		assert.equals(360, gabriela.precioDelViaje(anamaria,10))
		assert.equals(72, gabriela.precioDelViaje(anamaria,2))
	}
	
	test "Viaje con Teresa"{
		
		assert.equals(264, gabriela.precioDelViaje(teresa,10))
		assert.equals(52.8, gabriela.precioDelViaje(teresa,2))
	}
}

describe "Testing de mariela"{
	
	test "Viaje con cliente Ludmila" {
		
		
		assert.equals(180, mariela.precioDelViaje(ludmila,10))
		assert.equals(50, mariela.precioDelViaje(ludmila,2))
	}
	
	test "Viaje con Ana Maria"{
		
		assert.equals(300, mariela.precioDelViaje(anamaria,10))
		assert.equals(60, mariela.precioDelViaje(anamaria,2))
	}
	
	test "Viaje con Teresa"{
		
		assert.equals(220, mariela.precioDelViaje(teresa,10))
		assert.equals(50, mariela.precioDelViaje(teresa,2))
	}
}

describe "Testing de juana"{
	
	test "Viaje con cliente Ludmila" {
		
		
		assert.equals(200, juana.precioDelViaje(ludmila,10))
		assert.equals(100, juana.precioDelViaje(ludmila,2))
	}
	
	test "Viaje con Ana Maria"{
		
		assert.equals(200, juana.precioDelViaje(anamaria,10))
		assert.equals(100, juana.precioDelViaje(anamaria,2))
	}
	
	test "Viaje con Teresa"{
		
		assert.equals(200, juana.precioDelViaje(teresa,10))
		assert.equals(100, juana.precioDelViaje(teresa,2))
	}
}

describe "Testing de Lucia"{
		
	test "Reemplaza a roxana"{
		lucia.reemplazada(roxana)
		assert.equals(180, lucia.precioDelViaje(ludmila, 10))
	}
	
	test "No se puede reemplazar a si misma"{
		assert.throwsExceptionWithMessage("No se puede reemplazar a si misma", {
			lucia.reemplazada(lucia)
		})
	}
}
/* 
describe " testing melina"{
	
	test "melina viaja con mariela trabajando para ludmila"{
		
		melina.precioNuevo(ludmila)
		assert.equals(150, melina.precioDelViaje(ludmila,10))
	}
}
*/

